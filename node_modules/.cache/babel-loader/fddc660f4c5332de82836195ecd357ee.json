{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abishek_mondal\\\\Desktop\\\\SCM_BLOCKCHAIN-master\\\\scm\\\\src\\\\components\\\\build_items\\\\parts\\\\BuildParts.js\";\nimport React, { Component } from 'react';\nimport web3 from '../../../web3';\nimport _ from 'lodash';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ProductInstance from '../../../interface/product_management';\nimport Spinner from '../../spinner';\n\nclass BuildParts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serial: '',\n      accounts: [],\n      part_details: {},\n      loading: false,\n      exist: false\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const part_details = await ProductInstance.methods.buildPart(this.state.serial, this.state.type).send({\n        from: this.state.accounts[0]\n      }).then(() => ProductInstance.methods.showPart(this.state.serial).call({\n        from: this.state.accounts[0]\n      })).catch(e => {\n        this.setState({\n          exist: true\n        });\n      });\n      this.setState({\n        loading: false\n      });\n      setTimeout(() => this.setState({\n        exist: false\n      }), 5000);\n\n      if (part_details !== undefined) {\n        this.setState({\n          part_details\n        });\n        console.log(part_details);\n      }\n\n      console.log(_.isEmpty(this.state.part_details));\n    };\n  }\n\n  async componentDidMount() {\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      accounts\n    });\n  }\n\n  render() {\n    const {\n      exist,\n      accounts,\n      loading,\n      part_details\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-uppercase my-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, \"hello from BuildParts\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"Your current account address is : \", accounts), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, exist && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }\n    }, \"This Product Already exists!\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Serial NUmber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"serial\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"type\",\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }, \"Submit\"), loading && /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 33\n      }\n    })));\n  }\n\n}\n\nexport default BuildParts;","map":{"version":3,"sources":["C:/Users/abishek_mondal/Desktop/SCM_BLOCKCHAIN-master/scm/src/components/build_items/parts/BuildParts.js"],"names":["React","Component","web3","_","ProductInstance","Spinner","BuildParts","state","serial","accounts","part_details","loading","exist","onChange","e","setState","target","name","value","onSubmit","preventDefault","methods","buildPart","type","send","from","then","showPart","call","catch","setTimeout","undefined","console","log","isEmpty","componentDidMount","eth","getAccounts","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport web3 from '../../../web3';\r\nimport _ from 'lodash';\r\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport ProductInstance from '../../../interface/product_management';\r\nimport Spinner from '../../spinner';\r\n\r\nclass BuildParts extends Component {\r\n    state = {\r\n        serial: '',\r\n        accounts: [],\r\n        part_details: {},\r\n        loading : false,\r\n        exist: false\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({ accounts });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({loading : true});\r\n        const part_details = await ProductInstance.methods.buildPart(this.state.serial, this.state.type)\r\n            .send({ from: this.state.accounts[0] })\r\n            .then(() => ProductInstance.methods.showPart(this.state.serial)\r\n                .call({ from: this.state.accounts[0] }))\r\n            .catch(e => {\r\n                this.setState({exist : true})\r\n            })\r\n        this.setState({loading : false});\r\n        setTimeout(() => this.setState({exist : false}),5000);\r\n        if(part_details !== undefined){\r\n            this.setState({part_details})\r\n            console.log(part_details);\r\n            \r\n        }\r\n        console.log(_.isEmpty(this.state.part_details));\r\n        \r\n    }\r\n\r\n    render() {\r\n        const { exist, accounts, loading, part_details } = this.state;\r\n        return (\r\n            <div className=\"container mx-auto\">\r\n                <h1 className=\"text-uppercase my-10\">hello from BuildParts</h1>\r\n                <p>Your current account address is : {accounts}</p>\r\n                <form onSubmit={this.onSubmit}>\r\n                    {exist && <div className=\"alert alert-danger\" role=\"alert\">\r\n                        This Product Already exists!\r\n                    </div>}\r\n                    <label htmlFor=\"Serial NUmber\">Serial Number</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"serial\" onChange={this.onChange} />\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"type\" onChange={this.onChange} />\r\n                    <button className=\"my-2\">Submit</button>\r\n                    {loading && <Spinner />}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildParts;"]},"metadata":{},"sourceType":"module"}