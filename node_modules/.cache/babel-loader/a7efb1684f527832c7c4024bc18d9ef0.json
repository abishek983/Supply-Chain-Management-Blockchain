{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abishek_mondal\\\\Desktop\\\\SCM_BLOCKCHAIN-master\\\\scm\\\\src\\\\components\\\\build_items\\\\parts\\\\BuildParts.js\";\nimport React, { Component } from 'react';\nimport web3 from '../../../web3';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ProductInstance from '../../../interface/product_management';\nimport ChangeOwnerShipInstance from '../../../interface/change_ownership';\nimport Spinner from '../../spinner';\n\nclass BuildParts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serial: '',\n      type: '',\n      accounts: [],\n      part_details: {},\n      success: false,\n      loading: false,\n      exist: false,\n      ownership: false,\n      message: ''\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      this.setState({\n        success: false\n      });\n      const part_details = await ProductInstance.methods.buildPart(this.state.serial, this.state.type).send({\n        from: this.state.accounts[0]\n      }).catch(() => {\n        this.setState({\n          exist: true\n        });\n      });\n      this.setState({\n        loading: false\n      });\n      setTimeout(() => this.setState({\n        exist: false\n      }), 5000);\n\n      if (part_details !== undefined) {\n        this.setState({\n          success: true\n        });\n      }\n    };\n\n    this.addOwnership = () => {\n      this.setState({\n        loading: true\n      });\n      ChangeOwnerShipInstance.methods.addOwnership(0, this.state.serial).send({\n        from: this.state.accounts[0]\n      }, err => {\n        this.setState({\n          loading: false\n        });\n\n        if (err) {\n          this.setState({\n            message: \"Add Ownership failed\"\n          });\n        } else {\n          this.setState({\n            message: \"Add Ownership Succesful\"\n          });\n        }\n\n        this.setState({\n          serial: '',\n          type: ''\n        });\n      });\n      setTimeout(() => this.setState({\n        message: ''\n      }), 5000);\n    };\n  }\n\n  async componentDidMount() {\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      accounts\n    });\n  }\n\n  render() {\n    const {\n      serial,\n      type,\n      exist,\n      loading,\n      success,\n      message\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-uppercase my-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, \"BuildParts\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      href: \"/getParts\",\n      className: \"btn btn-outline-primary btn-sm\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, \"Part Detials\")), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }\n    }, exist && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 31\n      }\n    }, \"This Product Already exists!\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Serial NUmber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"serial\",\n      value: serial,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 21\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"type\",\n      value: type,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"my-2 btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }\n    }, \"Build\"), loading && /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 33\n      }\n    })), success && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 25\n      }\n    }, \"Part Build Successfully\"), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Please Add Ownership\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-danger mx-2\",\n      onClick: this.addOwnership,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 25\n      }\n    }, \"Add Ownership\")), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"text-danger\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }\n    }, message));\n  }\n\n}\n\nexport default BuildParts;","map":{"version":3,"sources":["C:/Users/abishek_mondal/Desktop/SCM_BLOCKCHAIN-master/scm/src/components/build_items/parts/BuildParts.js"],"names":["React","Component","web3","ProductInstance","ChangeOwnerShipInstance","Spinner","BuildParts","state","serial","type","accounts","part_details","success","loading","exist","ownership","message","onChange","e","setState","target","name","value","onSubmit","preventDefault","methods","buildPart","send","from","catch","setTimeout","undefined","addOwnership","err","componentDidMount","eth","getAccounts","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport web3 from '../../../web3';\r\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport ProductInstance from '../../../interface/product_management';\r\nimport ChangeOwnerShipInstance from '../../../interface/change_ownership';\r\nimport Spinner from '../../spinner';\r\n\r\nclass BuildParts extends Component {\r\n    state = {\r\n        serial: '',\r\n        type: '',\r\n        accounts: [],\r\n        part_details: {},\r\n        success: false,\r\n        loading: false,\r\n        exist: false,\r\n        ownership: false,\r\n        message : ''\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({ accounts });\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({ loading: true });\r\n        this.setState({ success: false });\r\n        const part_details = await ProductInstance.methods.buildPart(this.state.serial, this.state.type)\r\n            .send({ from: this.state.accounts[0] })\r\n            .catch(() => {\r\n                this.setState({ exist: true })\r\n            })\r\n        this.setState({ loading: false });\r\n        setTimeout(() => this.setState({ exist: false }), 5000);\r\n\r\n        if (part_details !== undefined) {\r\n            this.setState({ success: true });\r\n        }\r\n    }\r\n\r\n    addOwnership = () => {\r\n        this.setState({loading:true});\r\n        ChangeOwnerShipInstance.methods.addOwnership(0,this.state.serial)\r\n            .send({from : this.state.accounts[0]} ,(err)=>{\r\n                this.setState({loading:false});\r\n                if(err){\r\n                    this.setState({message : \"Add Ownership failed\"});\r\n                }\r\n                else{\r\n                    this.setState({message : \"Add Ownership Succesful\"});\r\n                }\r\n                this.setState({serial : '', type:''});\r\n            })\r\n        setTimeout(() => this.setState({message : ''}),5000)\r\n    }\r\n\r\n    render() {\r\n        const { serial, type, exist, loading, success, message } = this.state;\r\n        return (\r\n            <div className=\"container mx-auto\">\r\n                <h1 className=\"text-uppercase my-10\">BuildParts</h1>\r\n                <span>\r\n                    <a href=\"/getParts\" className=\"btn btn-outline-primary btn-sm\">Part Detials</a>\r\n                </span>\r\n                <form onSubmit={this.onSubmit}>\r\n                    {exist && <div className=\"alert alert-danger\" role=\"alert\">\r\n                        This Product Already exists!\r\n                    </div>}\r\n                    <label htmlFor=\"Serial NUmber\">Serial Number</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"serial\"\r\n                        value={serial} onChange={this.onChange} />\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"type\"\r\n                        value={type} onChange={this.onChange} />\r\n                    <button className=\"my-2 btn btn-primary\">Build</button>\r\n                    {loading && <Spinner />}\r\n                </form>\r\n                {success &&\r\n                    <div>\r\n                        <div className=\"text-success\">Part Build Successfully</div>\r\n                        <span className=\"text-danger\">Please Add Ownership</span>\r\n                        <button className=\"btn btn-danger mx-2\" onClick={this.addOwnership}>Add Ownership</button>\r\n                    </div>\r\n                }\r\n                <span className=\"text-danger\">{message}</span>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildParts;"]},"metadata":{},"sourceType":"module"}