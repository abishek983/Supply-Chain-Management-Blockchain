{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abishek_mondal\\\\Desktop\\\\SCM_BLOCKCHAIN-master\\\\scm\\\\src\\\\components\\\\build_items\\\\parts\\\\BuildParts.js\";\nimport React, { Component } from 'react';\nimport _ from 'lodash';\nimport web3 from '../../../web3';\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport ProductInstance from '../../../interface/product_management';\nimport Spinner from '../../spinner';\nimport Details from './Details';\n\nclass BuildParts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      serial: '',\n      type: '',\n      accounts: [],\n      part_details: {},\n      loading: false,\n      exist: false\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.onSubmit = async e => {\n      e.preventDefault();\n      this.setState({\n        loading: true\n      });\n      const part_details = await ProductInstance.methods.buildPart(this.state.serial, this.state.type).send({\n        from: this.state.accounts[0]\n      }).then(() => ProductInstance.methods.showPart(this.state.serial).call({\n        from: this.state.accounts[0]\n      })).catch(e => {\n        this.setState({\n          exist: true\n        });\n      });\n      this.setState({\n        loading: false\n      });\n      setTimeout(() => this.setState({\n        exist: false\n      }), 5000);\n\n      if (part_details !== undefined) {\n        this.setState({\n          part_details\n        });\n        console.log(part_details);\n        this.setState({\n          serial: ' ',\n          type: ' '\n        });\n      }\n\n      console.log(_.isEmpty(this.state.part_details));\n    };\n  }\n\n  async componentDidMount() {\n    const accounts = await web3.eth.getAccounts();\n    this.setState({\n      accounts\n    });\n  }\n\n  render() {\n    const {\n      serial,\n      type,\n      exist,\n      loading,\n      part_details\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container mx-auto\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"text-uppercase my-10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, \"BuildParts\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }\n    }, exist && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }\n    }, \"This Product Already exists!\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Serial NUmber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"serial\",\n      value: serial,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"type\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, \"Type\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"type\",\n      value: type,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }, \"Submit\"), loading && /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 33\n      }\n    }), !_.isEmpty(part_details) && /*#__PURE__*/React.createElement(Details, {\n      part_details: part_details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 50\n      }\n    })));\n  }\n\n}\n\nexport default BuildParts;","map":{"version":3,"sources":["C:/Users/abishek_mondal/Desktop/SCM_BLOCKCHAIN-master/scm/src/components/build_items/parts/BuildParts.js"],"names":["React","Component","_","web3","ProductInstance","Spinner","Details","BuildParts","state","serial","type","accounts","part_details","loading","exist","onChange","e","setState","target","name","value","onSubmit","preventDefault","methods","buildPart","send","from","then","showPart","call","catch","setTimeout","undefined","console","log","isEmpty","componentDidMount","eth","getAccounts","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport _ from 'lodash';\r\nimport web3 from '../../../web3';\r\nimport '../../../../node_modules/bootstrap/dist/css/bootstrap.min.css'\r\nimport ProductInstance from '../../../interface/product_management';\r\nimport Spinner from '../../spinner';\r\nimport Details from './Details';\r\n\r\nclass BuildParts extends Component {\r\n    state = {\r\n        serial: '',\r\n        type : '',\r\n        accounts : [],\r\n        part_details: {},\r\n        loading : false,\r\n        exist: false\r\n    };\r\n\r\n    async componentDidMount() {\r\n        const accounts = await web3.eth.getAccounts();\r\n        this.setState({ accounts });\r\n      }\r\n\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        this.setState({loading : true});\r\n        const part_details = await ProductInstance.methods.buildPart(this.state.serial, this.state.type)\r\n            .send({ from: this.state.accounts[0] })\r\n            .then(() => ProductInstance.methods.showPart(this.state.serial)\r\n                .call({ from: this.state.accounts[0] }))\r\n            .catch(e => {\r\n                this.setState({exist : true})\r\n            })\r\n        this.setState({loading : false});\r\n        setTimeout(() => this.setState({exist : false}),5000);\r\n        if(part_details !== undefined){\r\n            this.setState({part_details})\r\n            console.log(part_details);\r\n            this.setState({ serial : ' ', type : ' '})\r\n        }\r\n        console.log(_.isEmpty(this.state.part_details));\r\n        \r\n    }\r\n    render() {\r\n        const { serial, type, exist, loading, part_details } = this.state;\r\n        return (\r\n            <div className=\"container mx-auto\">\r\n                <h1 className=\"text-uppercase my-10\">BuildParts</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    {exist && <div className=\"alert alert-danger\" role=\"alert\">\r\n                        This Product Already exists!\r\n                    </div>}\r\n                    <label htmlFor=\"Serial NUmber\">Serial Number</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"serial\"\r\n                    value={serial} onChange={this.onChange} />\r\n                    <label htmlFor=\"type\">Type</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"type\" \r\n                    value={type} onChange={this.onChange} />\r\n                    <button className=\"my-2\">Submit</button>\r\n                    {loading && <Spinner />}\r\n                    {!_.isEmpty(part_details) && <Details part_details={part_details} />}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default BuildParts;"]},"metadata":{},"sourceType":"module"}