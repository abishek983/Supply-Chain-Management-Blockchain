{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abishek_mondal\\\\Desktop\\\\SCM_BLOCKCHAIN-master\\\\scm\\\\src\\\\components\\\\build_items\\\\parts\\\\GetParts.js\";\nimport React, { Component } from 'react';\nimport ProductInstance from '../../../interface/product_management';\nimport Details from './Details';\nimport _ from 'lodash';\nimport Spinner from '../../spinner';\n\nclass GetParts extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      part_details: {},\n      serial: '',\n      loading: false,\n      error: false\n    };\n\n    this.onSubmit = e => {\n      e.preventDefault();\n      this.setState({\n        loading: true,\n        part_details: ''\n      });\n      ProductInstance.methods.showPart(this.state.serial).call({\n        from: this.props.accounts[0]\n      }, (err, part_details) => {\n        if (err) {\n          console.log(\"part doesn't exist or doesn't belongs to you\");\n        } else {\n          this.setState({\n            part_details\n          });\n          this.setState({\n            loading: false\n          });\n\n          if (part_details.date == 0) {\n            this.setState({\n              part_details: '',\n              error: true\n            });\n          }\n        }\n      });\n      setTimeout(() => this.setState({\n        error: false\n      }));\n    };\n\n    this.onChange = e => {\n      this.setState({\n        serial: e.target.value\n      });\n    };\n  }\n\n  render() {\n    const {\n      part_details,\n      loading,\n      serial\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }, \"Get Parts Details\"), error && /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      role: \"alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 31\n      }\n    }, \"Please enter a valid Serial Number!!\"), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"Serial NUmber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    }, \"Serial Number\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      name: \"serial\",\n      value: serial,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary my-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, \"Get Details\"), loading && /*#__PURE__*/React.createElement(Spinner, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }), !_.isEmpty(part_details) && /*#__PURE__*/React.createElement(Details, {\n      part_details: part_details,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 50\n      }\n    })));\n  }\n\n}\n\nexport default GetParts;","map":{"version":3,"sources":["C:/Users/abishek_mondal/Desktop/SCM_BLOCKCHAIN-master/scm/src/components/build_items/parts/GetParts.js"],"names":["React","Component","ProductInstance","Details","_","Spinner","GetParts","state","part_details","serial","loading","error","onSubmit","e","preventDefault","setState","methods","showPart","call","from","props","accounts","err","console","log","date","setTimeout","onChange","target","value","render","isEmpty"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProductInstance from '../../../interface/product_management';\r\nimport Details from './Details';\r\nimport _ from 'lodash';\r\nimport Spinner from '../../spinner';\r\n\r\n\r\nclass GetParts extends Component {\r\n    state = {\r\n        part_details: {},\r\n        serial : '',\r\n        loading: false,\r\n        error : false\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();        \r\n        this.setState({ loading: true,part_details : '' });\r\n        ProductInstance.methods.showPart(this.state.serial)\r\n            .call({ from: this.props.accounts[0] }, (err, part_details) => {\r\n                if (err) {\r\n                    console.log(\"part doesn't exist or doesn't belongs to you\")\r\n                }\r\n                else {\r\n                    this.setState({ part_details })\r\n                    this.setState({ loading: false });\r\n                    if(part_details.date==0){\r\n                        this.setState({part_details : '' , error : true})\r\n                    }\r\n                }\r\n            })\r\n        setTimeout(() => this.setState({error : false}));\r\n    }\r\n    onChange = (e) => {\r\n        this.setState({ serial: e.target.value });\r\n    }\r\n\r\n    render() {\r\n        const { part_details, loading, serial } = this.state;\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <h1>Get Parts Details</h1>\r\n                    {error && <div className=\"alert alert-danger\" role=\"alert\">\r\n                        Please enter a valid Serial Number!!\r\n                    </div>}\r\n                    <label htmlFor=\"Serial NUmber\">Serial Number</label>\r\n                    <input type=\"text\" className=\"form-control\" name=\"serial\"\r\n                        value={serial} onChange={this.onChange} />\r\n                    <button className=\"btn btn-primary my-2\">Get Details</button>\r\n                    {loading && <Spinner />}\r\n                    {!_.isEmpty(part_details) && <Details part_details={part_details} />}\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GetParts;"]},"metadata":{},"sourceType":"module"}